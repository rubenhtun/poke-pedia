{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useTheme } from \"../contexts/ThemeContext\";\n// import \"../styles/Contact.css\";\n\n// const Contact: React.FC = () => {\n//   const { theme } = useTheme();\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const [formErrors, setFormErrors] = useState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\",\n//   });\n\n//   const handleChange = (\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n//   ) => {\n//     const { name, value } = e.target;\n//     setFormData((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const validateForm = () => {\n//     let isValid = true;\n//     const errors = { name: \"\", email: \"\", message: \"\" };\n\n//     if (!formData.name.trim()) {\n//       errors.name = \"Name is required\";\n//       isValid = false;\n//     }\n\n//     if (!formData.email.trim()) {\n//       errors.email = \"Email is required\";\n//       isValid = false;\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//       errors.email = \"Email is invalid\";\n//       isValid = false;\n//     }\n\n//     if (!formData.message.trim()) {\n//       errors.message = \"Message is required\";\n//       isValid = false;\n//     }\n\n//     setFormErrors(errors);\n//     return isValid;\n//   };\n\n//   const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     if (validateForm()) {\n//       // Here you would typically send the form data to your backend\n//       console.log(\"Form submitted:\", formData);\n//       alert(\"Thank you for your message! We will get back to you soon.\");\n//       setFormData({ name: \"\", email: \"\", message: \"\" });\n//     }\n//   };\n\n//   return (\n//     <div className={`contact-container ${theme}`}>\n//       <div className=\"container\">\n//         <h1>Contact Us</h1>\n//         <div className=\"content\">\n//           <section className=\"contact-info\">\n//             <h2>Get in Touch</h2>\n//             <p>\n//               Have questions about Pokémon or suggestions for Poke Pedia? We'd\n//               love to hear from you! Fill out the form below or reach out to us\n//               directly.\n//             </p>\n//             <ul>\n//               <li>\n//                 <i className=\"bi bi-envelope\"></i> Email: info@pokepedia.com\n//               </li>\n//               <li>\n//                 <i className=\"bi bi-telephone\"></i> Phone: (123) 456-7890\n//               </li>\n//               <li>\n//                 <i className=\"bi bi-geo-alt\"></i> Address: 123 Poke Street,\n//                 Kanto Region\n//               </li>\n//             </ul>\n//           </section>\n//           <section className=\"contact-form\">\n//             <h2>Send Us a Message</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"name\">Name:</label>\n//                 <input\n//                   type=\"text\"\n//                   id=\"name\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//                 {formErrors.name && (\n//                   <span className=\"error\">{formErrors.name}</span>\n//                 )}\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"email\">Email:</label>\n//                 <input\n//                   type=\"email\"\n//                   id=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//                 {formErrors.email && (\n//                   <span className=\"error\">{formErrors.email}</span>\n//                 )}\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"message\">Message:</label>\n//                 <textarea\n//                   id=\"message\"\n//                   name=\"message\"\n//                   value={formData.message}\n//                   onChange={handleChange}\n//                   required\n//                 ></textarea>\n//                 {formErrors.message && (\n//                   <span className=\"error\">{formErrors.message}</span>\n//                 )}\n//               </div>\n//               <button type=\"submit\">Send Message</button>\n//             </form>\n//           </section>\n//         </div>\n//         <Link to=\"/\" className=\"back-link\">\n//           <i className=\"bi bi-arrow-left\"></i> Back to Home\n//         </Link>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Contact;","map":{"version":3,"names":[],"sources":["/media/ruben/0912D149477F5133/Reben.Dev/React-Master/poke-pedia/src/pages/Contact.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useTheme } from \"../contexts/ThemeContext\";\n// import \"../styles/Contact.css\";\n\n// const Contact: React.FC = () => {\n//   const { theme } = useTheme();\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\",\n//   });\n//   const [formErrors, setFormErrors] = useState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\",\n//   });\n\n//   const handleChange = (\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n//   ) => {\n//     const { name, value } = e.target;\n//     setFormData((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const validateForm = () => {\n//     let isValid = true;\n//     const errors = { name: \"\", email: \"\", message: \"\" };\n\n//     if (!formData.name.trim()) {\n//       errors.name = \"Name is required\";\n//       isValid = false;\n//     }\n\n//     if (!formData.email.trim()) {\n//       errors.email = \"Email is required\";\n//       isValid = false;\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//       errors.email = \"Email is invalid\";\n//       isValid = false;\n//     }\n\n//     if (!formData.message.trim()) {\n//       errors.message = \"Message is required\";\n//       isValid = false;\n//     }\n\n//     setFormErrors(errors);\n//     return isValid;\n//   };\n\n//   const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     if (validateForm()) {\n//       // Here you would typically send the form data to your backend\n//       console.log(\"Form submitted:\", formData);\n//       alert(\"Thank you for your message! We will get back to you soon.\");\n//       setFormData({ name: \"\", email: \"\", message: \"\" });\n//     }\n//   };\n\n//   return (\n//     <div className={`contact-container ${theme}`}>\n//       <div className=\"container\">\n//         <h1>Contact Us</h1>\n//         <div className=\"content\">\n//           <section className=\"contact-info\">\n//             <h2>Get in Touch</h2>\n//             <p>\n//               Have questions about Pokémon or suggestions for Poke Pedia? We'd\n//               love to hear from you! Fill out the form below or reach out to us\n//               directly.\n//             </p>\n//             <ul>\n//               <li>\n//                 <i className=\"bi bi-envelope\"></i> Email: info@pokepedia.com\n//               </li>\n//               <li>\n//                 <i className=\"bi bi-telephone\"></i> Phone: (123) 456-7890\n//               </li>\n//               <li>\n//                 <i className=\"bi bi-geo-alt\"></i> Address: 123 Poke Street,\n//                 Kanto Region\n//               </li>\n//             </ul>\n//           </section>\n//           <section className=\"contact-form\">\n//             <h2>Send Us a Message</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"name\">Name:</label>\n//                 <input\n//                   type=\"text\"\n//                   id=\"name\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//                 {formErrors.name && (\n//                   <span className=\"error\">{formErrors.name}</span>\n//                 )}\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"email\">Email:</label>\n//                 <input\n//                   type=\"email\"\n//                   id=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//                 {formErrors.email && (\n//                   <span className=\"error\">{formErrors.email}</span>\n//                 )}\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"message\">Message:</label>\n//                 <textarea\n//                   id=\"message\"\n//                   name=\"message\"\n//                   value={formData.message}\n//                   onChange={handleChange}\n//                   required\n//                 ></textarea>\n//                 {formErrors.message && (\n//                   <span className=\"error\">{formErrors.message}</span>\n//                 )}\n//               </div>\n//               <button type=\"submit\">Send Message</button>\n//             </form>\n//           </section>\n//         </div>\n//         <Link to=\"/\" className=\"back-link\">\n//           <i className=\"bi bi-arrow-left\"></i> Back to Home\n//         </Link>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Contact;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}